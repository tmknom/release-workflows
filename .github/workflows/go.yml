name: Release Go
on:
  workflow_call:
    inputs:
      bump-level:
        type: string
        required: true
        description: Determines which part of the version to increment [auto/patch/minor/major]
      go-version-file:
        type: string
        default: go.mod
        required: false
        description: Path to the version file for Go, such as .go-version, go.mod or go.work.
      homebrew-tap-repository:
        type: string
        default: homebrew-tap
        required: false
        description: The repository for Homebrew formulae used to install tools on macOS.

permissions: {}

defaults:
  run:
    shell: bash

jobs:
  prepare:
    if: ${{ github.repository_owner == github.actor }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      packages: read
      id-token: write
    outputs:
      token: ${{ steps.encrypt.outputs.result }}
    steps:
      - name: Private Generate GitHub Token
        id: private
        uses: tmknom/private-generate-github-token-action@0270221045a1b793cfc68f81fab03f56c76b8ad9 # v0.3.7
        with:
          repositories: ${{ inputs.homebrew-tap-repository }}

      - name: Encrypt token
        id: encrypt
        uses: tmknom/symmetric-encrypt-decrypt-action@f82452a36a04ec4b4215dd92d7958cdae5f9a620 # v0.1.3
        with:
          data: ${{ steps.private.outputs.token }}
          operation: encrypt

  release:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [prepare]
    permissions:
      contents: write
      packages: write
      id-token: write
      attestations: write
    steps:
      - name: Checkout
        uses: tmknom/secure-checkout-action@v1
        with:
          fetch-depth: 100
          persist-credentials: true

      - name: Generate artifact name
        id: artifact
        run: |
          set -x
          echo "name=${GITHUB_REPOSITORY#*/}" >> "${GITHUB_OUTPUT}"

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: ${{ inputs.go-version-file }}

      - name: Determine Version Level
        id: determine
        if: ${{ inputs.bump-level == 'auto' }}
        uses: tmknom/determine-version-level-action@83449961162020e90bb0cd55acb99cc695526221 # v0.2.1

      - name: Bump Version
        id: bump
        uses: tmknom/bump-version-action@87bed7f224292cab5b46a4cae9897bbf64153f00 # v0.2.1
        with:
          bump-level: ${{ steps.determine.outputs.bump-level || inputs.bump-level }}

      - name: Push Version Tag
        uses: tmknom/push-version-tag-action@a9d1b46f9c29d3db510771452257b228bfd8a33f # v0.1.1
        with:
          version: ${{ steps.bump.outputs.version }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@fb28c2b6339dcd94da6e4cbcbc5e888961f6f8c3 # v3.9.0

      - name: Install Syft
        uses: anchore/sbom-action/download-syft@9246b90769f852b3a8921f330c59e0b3f439d6e9 # v0.20.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Retrieve OIDC Token
        id: oidc
        uses: tmknom/retrieve-oidc-token-action@4c373152cedf7f42b1e496e245236449d8d57121 # v0.2.1

      - name: Decrypt token
        id: decrypt
        uses: tmknom/symmetric-encrypt-decrypt-action@f82452a36a04ec4b4215dd92d7958cdae5f9a620 # v0.1.3
        with:
          data: ${{ needs.prepare.outputs.token }}
          operation: decrypt

      - name: Cross GoReleaser
        id: goreleaser
        uses: tmknom/cross-goreleaser-action@4b0e181d6801e05c5262b0d47db22f5a3c137231 # v0.2.3
        with:
          configuration-url: https://raw.githubusercontent.com/tmknom/configurations/128cc66301fe96e449a1e284bb78d5e2ecfb96f2/goreleaser/verifiable.yml # v0.6.0
          homebrew-tap-repository: ${{ inputs.homebrew-tap-repository }}
          homebrew-tap-github-token: ${{ steps.decrypt.outputs.result }}

      - name: Revoke GitHub Token
        if: ${{ always() }}
        uses: tmknom/revoke-github-token-action@9ed4395d40ab1dd9dcd63e33686dc0f8b38ca8b1 # v0.1.2
        with:
          token: ${{ steps.decrypt.outputs.result }}

      - name: Attest binaries
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be # v2.4.0
        with:
          subject-path: dist/

      - name: Generate metadata
        id: metadata
        env:
          ARTIFACTS: ${{ steps.goreleaser.outputs.artifacts }}
        run: |
          set -x
          manifest_digest="$(jq -r '. | map(select(.type=="Docker Manifest"))[0] | .extra.Digest' <<<"${ARTIFACTS}")"
          echo "manifest-digest=${manifest_digest}" >> "${GITHUB_OUTPUT}"

      - name: Attest container images
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be # v2.4.0
        with:
          subject-name: ghcr.io/${{ github.repository }}
          subject-digest: ${{ steps.metadata.outputs.manifest-digest }}
          push-to-registry: true

      - name: Upload Artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: dist
          path: dist/
          retention-days: 1

      - name: Generate footer of release note
        uses: tmknom/generate-go-release-note-action@9fc350d5a9eff8d8d26ef4202507a67190991755 # v0.1.1
        id: footer
        with:
          artifact-name: ${{ steps.artifact.outputs.name }}
          version-tag: ${{ steps.bump.outputs.version }}
          image-digest: ${{ steps.metadata.outputs.manifest-digest }}
          release-workflow-ref: ${{ steps.oidc.outputs.job_workflow_ref }}

      - name: Publish release
        env:
          FOOTER_FILE: ${{ steps.footer.outputs.release-note-path }}
          VERSION_TAG: ${{ steps.bump.outputs.version }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          set -x
          notes_file="${RUNNER_TEMP}/release_notes.md"
          gh release view "${VERSION_TAG}" --json "body" --jq ".body" >> "${notes_file}"
          cat "${FOOTER_FILE}" >> "${notes_file}"
          gh release edit "${VERSION_TAG}" --draft=false --notes-file "${notes_file}"
